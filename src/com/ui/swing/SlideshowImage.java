/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ui.swing;

import com.happywedding.model.GoiDichVu;
import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JComponent;
import javax.swing.JPanel;

/**
 *
 * @author ADMIN
 */
public class SlideshowImage extends javax.swing.JDialog {

    private List<GoiDichVu> list;
    private GoiDichVu goiDV;

    /*
     * Creates new form SlideshowImage
     */
    public SlideshowImage(java.awt.Frame parent, boolean modal, List<GoiDichVu> list, String maDV) {
        super(parent, modal);
        this.list = list;
        initComponents();
        getContentPane().setBackground(new Color(255, 255, 255));

        if (this.list.size() >= 2) {
            slideshow1.isAuto = true;
        }

        List<ImageSlide> listImg = new ArrayList<>();
        for (GoiDichVu goi : list) {
            listImg.add(new ImageSlide(goi.getHinhAnh()));
        }

        slideshow1.initSlideshow(listImg);
    }

    public SlideshowImage(java.awt.Frame parent, boolean modal, GoiDichVu goi, String maDV) {
        super(parent, modal);
        this.goiDV = goi;
        initComponents();
        getContentPane().setBackground(new Color(255, 255, 255));

        List<ImageSlide> listImg = new ArrayList<>();

        listImg.add(new ImageSlide(goi.getHinhAnh()));

        slideshow1.initSlideshow(listImg);
    }

    public SlideshowImage(java.awt.Frame parent, boolean modal, List<String> list) {
        super(parent, modal);

        initComponents();
        getContentPane().setBackground(new Color(255, 255, 255));

        List<ImageSlide> listImg = new ArrayList<>();
        for (String s : list) {
            listImg.add(new ImageSlide(s));
        }

        slideshow1.initSlideshow(listImg);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnNext = new com.ui.swing.HoverButton();
        btnPrev = new com.ui.swing.HoverButton();
        jLabel1 = new javax.swing.JLabel();
        slideshow1 = new com.ui.swing.Slideshow();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnNext.setBackground(new java.awt.Color(24, 37, 153));
        btnNext.setForeground(new java.awt.Color(255, 255, 255));
        btnNext.setText(">");
        btnNext.setBorderColor(new java.awt.Color(24, 37, 153));
        btnNext.setColor(new java.awt.Color(24, 37, 153));
        btnNext.setColorClick(new java.awt.Color(51, 51, 255));
        btnNext.setColorOver(new java.awt.Color(51, 51, 255));
        btnNext.setFocusPainted(false);
        btnNext.setLabelColor(java.awt.Color.white);
        btnNext.setLableColorClick(java.awt.Color.white);
        btnNext.setRadius(15);
        btnNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNextActionPerformed(evt);
            }
        });
        getContentPane().add(btnNext, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 490, -1, 30));

        btnPrev.setBackground(new java.awt.Color(24, 37, 153));
        btnPrev.setForeground(new java.awt.Color(255, 255, 255));
        btnPrev.setText("<");
        btnPrev.setBorderColor(new java.awt.Color(24, 37, 153));
        btnPrev.setColor(new java.awt.Color(24, 37, 153));
        btnPrev.setColorClick(new java.awt.Color(51, 51, 255));
        btnPrev.setColorOver(new java.awt.Color(51, 51, 255));
        btnPrev.setFocusPainted(false);
        btnPrev.setLabelColor(java.awt.Color.white);
        btnPrev.setLableColorClick(java.awt.Color.white);
        btnPrev.setRadius(15);
        btnPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrevActionPerformed(evt);
            }
        });
        getContentPane().add(btnPrev, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 490, -1, 30));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 530, -1, -1));
        getContentPane().add(slideshow1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 40, 830, 400));

        setSize(new java.awt.Dimension(936, 585));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNextActionPerformed
        slideshow1.next();
    }//GEN-LAST:event_btnNextActionPerformed

    private void btnPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrevActionPerformed
        slideshow1.back();
    }//GEN-LAST:event_btnPrevActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(SlideshowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(SlideshowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(SlideshowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(SlideshowImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//        //</editor-fold>
//
//        /* Create and display the dialog */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                SlideshowImage dialog = new SlideshowImage(new javax.swing.JFrame(), true);
//                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
//                    @Override
//                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.exit(0);
//                    }
//                });
//                dialog.setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.ui.swing.HoverButton btnNext;
    private com.ui.swing.HoverButton btnPrev;
    private javax.swing.JLabel jLabel1;
    private com.ui.swing.Slideshow slideshow1;
    // End of variables declaration//GEN-END:variables
}

class ImageSlide extends JPanel {

    /**
     * Creates new form ImageSlide
     */
    public ImageSlide(String img) {
        initComponents();
        File path = new File("image/goiDichVu", img);
        System.out.println(path.getAbsolutePath());
        lblImg.setIcon(new ImageIcon(path.getAbsolutePath()));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        lblImg = new javax.swing.JLabel();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblImg, javax.swing.GroupLayout.DEFAULT_SIZE, 360, Short.MAX_VALUE)
        );
    }// </editor-fold>                        

    // Variables declaration - do not modify                     
    private javax.swing.JLabel lblImg;
    // End of variables declaration                   
}

class PanelTransparent extends JComponent {

    public float getAlpha() {
        return alpha;
    }

    public void setAlpha(float alpha) {
        this.alpha = alpha;
        repaint();
    }

    private float alpha;

    @Override
    public void paint(Graphics grphcs) {
        Graphics2D g2 = (Graphics2D) grphcs.create();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(getBackground());
        g2.setComposite(AlphaComposite.getInstance(AlphaComposite.SRC_OVER, alpha));
        int x[] = {0, getWidth(), getWidth() - 100, 0};
        int y[] = {0, 0, getHeight(), getHeight()};
        g2.fillPolygon(x, y, x.length);
        g2.dispose();
        super.paint(grphcs);
    }
}
